     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 3E3E00                  read_int_msg db ">>", 0
    12 00000003 25640A00                int_format db "%d", 10, 0
    13 00000007 256400                  read_int_f db "%d", 0
    14 0000000A 00000000                e dd 0
    15 0000000E 00000000                d dd 0
    16 00000012 00000000                c dd 0
    17 00000016 00000000                b dd 0
    18 0000001A 00000000                a dd 0
    19 0000001E 00000000                temp1 dd 0
    20                                  
    21                                  segment code use32 class=code
    22                                  start:
    23 00000000 68[00000000]            push dword read_int_msg
    24 00000005 FF15[00000000]          call [printf]
    25 0000000B 83C404                  add esp, 4 * 1
    26 0000000E 68[1A000000]            push dword a
    27 00000013 68[07000000]            push dword read_int_f
    28 00000018 FF15[00000000]          call [scanf]
    29 0000001E 83C408                   add esp, 4 * 2; print(a)
    30 00000021 A1[1A000000]            mov eax, [a]
    31 00000026 50                      push dword eax
    32 00000027 68[03000000]            push dword int_format
    33 0000002C FF15[00000000]          call [printf]
    34 00000032 83C408                  add esp, 4 * 2
    35                                  ; [a] + 4
    36 00000035 A1[1A000000]            mov eax, [a]
    37 0000003A 83C004                  add eax, 4
    38 0000003D A3[1E000000]            mov [temp1], eax
    39                                  ; a = temp1
    40 00000042 A1[1E000000]            mov eax, [temp1]
    41 00000047 A3[1A000000]            mov [a], eax
    42                                  ; print(a)
    43 0000004C A1[1A000000]            mov eax, [a]
    44 00000051 50                      push dword eax
    45 00000052 68[03000000]            push dword int_format
    46 00000057 FF15[00000000]          call [printf]
    47 0000005D 83C408                  add esp, 4 * 2
    48                                  ; exit(0)
    49 00000060 6A00                    push dword 0
    50 00000062 FF15[00000000]          call [exit]
